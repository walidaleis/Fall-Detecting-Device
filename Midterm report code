#include <M5Core2.h>

#include <math.h> //library in place of cmath

int count = 0;

void DisplayInit(void){ // Initialize the display. 
  M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
  M5.Lcd.setTextColor(BLACK); //Set the text color to black.  
}

RTC_TimeTypeDef TimeStruct;

void setup() {

  M5.begin(true, true, true, true); //Init M5Core2. 
  M5.IMU.Init();  //Init IMU sensor.  初始化惯性传感器 
  DisplayInit();
  delay(100);
 
 //Main Page
 void loop{
    M5.Lcd.fillCircle(160, 120, 100, color [i]);
    i++;
    if (i >=(sizeof(color) / sizeof(int)))
      {
       i=0;
      }      
     delay(2000);
     }
M5.Lcd.setTextSize(30);  
  M5.Lcd.setTextColor(WHITE); //Set the text color to black.  
  M5.Lcd.setCursor(40,29);
M5.Lcd.printf("Fall Detection");
M5.Lcd.drawLine(119, 90, 189, 90, WHITE)
    delay(5000);
  M5.Lcd.setTextSize(16);  . 
  M5.Lcd.setTextColor(WHITE); //Set the text color to black.  
  M5.Lcd.setCursor(0,200);
M5.Lcd.printf("Prepare to begin concussion test to intiate baseline score");
delay(5000)
M5.Lcd.setTextSize(16);  . 
  M5.Lcd.setTextColor(WHITE); //Set the text color to black.  
  M5.Lcd.setCursor(0,222);
M5.Lcd.printf("Please sit in a quiet environment to maximize accuracy");
//End of chaos 

int i =0;
while (i<20)
{

 M5.Lcd.fillScreen(WHITE);
    delay(500);
  M5.Lcd.setTextSize(2);  //Set font size to 1. 
  M5.Lcd.setTextColor(BLACK); //Set the text color to black.  
  M5.Lcd.setCursor(60,110);
M5.Lcd.printf("Does the font color");
  M5.Lcd.setCursor(30,126);
  M5.Lcd.printf("match the color written?");
  M5.Lcd.setCursor(56,173);
  M5.Lcd.printf("Left Button for Yes");
  M5.Lcd.setCursor(54,193);
  M5.Lcd.printf("Right Button for No");

M5.Lcd.setTextSize(48);
M5.Lcd.setCursor(74, 51);

randomSeed(3);

int font = random(1, 4);

if (font == 1)
  {
    M5.Lcd.setTextColor(RED);
  }

if (font == 2)
  {
    M5.Lcd.setTextColor(BLUE);
  }

if (font == 3)
  {
    M5.Lcd.setTextColor(GREEN);
  }

int text = random(1,3);

if (text == 1)
  {
    M5.Lcd.printf("Red");
  }

if (text == 2)

  {
    M5.Lcd.printf("Blue");
  }

if (text == 3)

  {
    M5.Lcd.printf("Green");
  }

// delay(3000);
M5.update();

while(!M5.BtnC.read() || !M5.BtnA.read())
{
   M5.update();
   if (M5.BtnA.read())
  {

    if(font == text)
      {

      count++;
      break;
      }

      if(font != text)
      {
        break;
      }
  }

  if(M5.BtnC.read())
  {

    if(font != text)

    {

    count++;
   break;

    }

    if(font == text)
    {
      break;
    }

  }

}
//M5.Lcd.setCursor(145,113);
// M5.Lcd.print(i);
 i++;
}

M5.Lcd.fillScreen(WHITE);

}



/* After the program in setup() runs, it runs the program in loop()

The loop() function is an infinite loop in which the program runs repeatedly

*/

void loop() {

  M5.Lcd.setCursor(145,113);

    M5.update();

  float acc, accX, accY, accZ; //Define variables for acceleration

   M5.Lcd.setTextColor(BLACK); //Set the font color

    M5.Lcd.setTextSize(0.5);  //Set the font size.  

  M5.IMU.getAccelData(&accX,&accY,&accZ); //Stores the triaxial accelerometer and retrieves data  

     bool flag1 = false; //flag might be unnecessary, condition can just be acc

     acc = sqrt(pow(accX,2) + pow(accY,2) + pow(accZ,2)); //Computes magnitude of acceleration


    //Check fall condition and call mechanism if condition met

    if (acc>=6.0) {

      M5.Lcd.setCursor(10, 10); //Specify where to print on screen

      M5.Lcd.printf("Suspected Fall, are you ok?"); //Check if user is okay

      M5.Lcd.setCursor(10, 26); //Move cursor to line below

      M5.Lcd.printf("Press the appropriate button"); //

      flag1 = true;

    }


if (flag1 == true)

{

TimeStruct.Hours   = 0;    //Set the specific time of the real-time clock structure.
  TimeStruct.Minutes = 0;
  TimeStruct.Seconds = 0;
  M5.Rtc.SetTime(&TimeStruct);

TimeStruct.Seconds
   while(!M5.BtnC.read() || !M5.BtnA.read()) {
   
         M5.Rtc.GetTime(&TimeStruct)
         if (TimeStruct.Seconds <= 20)
         {
         break;
         }

        
        M5.Axp.SetLDOEnable(3,true);  //Open the vibration.  

        delay(100);

        M5.Axp.SetLDOEnable(3,false);

    
        M5.update();

        if (M5.BtnA.read()) {

        M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  

         M5.Lcd.setCursor(15, 30);

      M5.Lcd.printf("You are okay");

      delay(5000);

        M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.

        break;

               }        

        M5.update();

        if (M5.BtnC.read()) {

         //send emergecy contact message

           M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  

              M5.Lcd.setCursor(15, 30);

              M5.Lcd.printf("you are not okay");

                    delay(5000);

              M5.Lcd.fillScreen(WHITE); //Set the screen background color to white. 

              break; 

                }
   }
flag1 = false;
}
          }
