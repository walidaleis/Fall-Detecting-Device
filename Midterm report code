/*
*******************************************************************************
* Copyright (c) 2021 by M5Stack
*                  Equipped with M5Core2 sample source code
*                          配套  M5Core2 示例源代码
* Visit the website for more information：https://docs.m5stack.com/en/core/gray
* 获取更多资料请访问：https://docs.m5stack.com/zh_CN/core/gray
*
* describe：Speaker example.  喇叭示例
* date：2021/7/21
*******************************************************************************
*/
#include <M5Core2.h>
#include <math.h> //library in place of cmath
#define SHORT_PRESS_TIME 10 //Defines the length of a tap on the screen 

void DisplayInit(void){ // Initialize the display. 
  M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
  M5.Lcd.setTextColor(BLACK); //Set the text color to black.  
  M5.Lcd.setTextSize(1);  //Set font size to 1. 
  
}

void setup() {
  M5.begin(true, true, true, true); //Init M5Core2. 
    M5.IMU.Init();  //Init IMU sensor.  初始化惯性传感器 
  DisplayInit();
  M5.Buttons.draw(); //Call function to draw buttons
  delay(100);
}

/* After the program in setup() runs, it runs the program in loop()
The loop() function is an infinite loop in which the program runs repeatedly
*/
void loop() {
  float acc, accX, accY, accZ; //Define variables for acceleration
   M5.Lcd.setTextColor(BLACK); //Set the font color
    M5.Lcd.setTextSize(0.5);  //Set the font size.  
  M5.IMU.getAccelData(&accX,&accY,&accZ); //Stores the triaxial accelerometer and retrieves data  
//  M5.IMU.getAhrsData(&pitch,&roll,&yaw);  //Stores the inertial sensor attitude and retrieves data on angle but not needed for this rudimentary program


     acc = sqrt(pow(accX,2) + pow(accY,2) + pow(accZ,2)); //Computes magnitude of acceleration

    //Check fall condition and call mechanism if condition met
    if (acc>=2.4) {

      M5.Lcd.setCursor(10, 10); //Specify where to print on screen
      M5.Lcd.printf("Suspected Fall, are you ok?"); //Check if user is okay
      M5.Lcd.setCursor(10, 26); //Move cursor to line below
      M5.Lcd.printf("Press the appropriate button"); //
      
      
      //Create buttons and set colors of buttons in the format {fill, boundary, text}
//      ButtonColors on_clrs  = {BLACK, WHITE, WHITE};
//      ButtonColors off_clrs = {BLACK, WHITE, WHITE};
//      Button A(40,  140, 80, 80, false ,"Yes", off_clrs, on_clrs, MC_DATUM);
//      Button B(200, 140, 80, 80, false ,"No", off_clrs, on_clrs, MC_DATUM);

      M5.update();
      if (M5.BtnA.wasPressed()) {
      M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
         M5.Lcd.setCursor(15, 30);
      M5.Lcd.printf("You are okay");
      delay(5000);
        M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
      }
            
        //initate imPACT concussion test
     M5.update();
     if (M5.BtnB.wasPressed()) {
         //send emergecy contact message
           M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
              M5.Lcd.setCursor(15, 30);
              M5.Lcd.printf("you are not okay");
                    delay(5000);
              M5.Lcd.fillScreen(WHITE); //Set the screen background color to white.  
      }
    
      for (int i=0; i<5; i++) { //for loop repeats 5 times to vibrate every 5 seconds until 20 seconds have passed
          M5.Axp.SetLDOEnable(3,true);  //Open the vibration.  
          delay(100);
          M5.Axp.SetLDOEnable(3,false);
          
//          M5.Lcd.printf("Suspected Fall, are you ok?");
//          M5.Lcd.setcursor(10, 26);
//          M5.Lcd.printf("Press the left button for yes and right button for no");
//          TouchPoint_t pos= M5.Touch.getPressPoint(); // Stores the touch coordinates in pos. 
//          if(pos.y > 240||(pos.x < 109)
//            break;
//          // else send emergency contact message
          delay(5000); //Wait 5 seconds before incrementing i and repeating the for loop
          }
    }
  
   delay(10);

       }    
